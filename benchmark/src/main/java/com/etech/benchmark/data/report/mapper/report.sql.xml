<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.etech.benchmark.data.report.dao.ReportDao">
    
    <update id="createTable" parameterType="java.util.Map" statementType="STATEMENT">
         create table if not exists ${tablename}
        <foreach collection="keys" item="k" index="index" open="(" separator="," close=");">
            <choose>
                <when test= "k == 'id' ">
                    id varchar(32) primary key
                </when>
                <otherwise>
                    ${k} varchar(50) not null
                </otherwise>
            </choose>
        </foreach>
    </update>
    
    <insert id="insert" parameterType="java.util.Map" statementType="STATEMENT">
        insert into ${tablename}
        <foreach collection="keys" item="k" index="index" open="(" separator="," close=")">
            ${k}
        </foreach>
        values
        <foreach collection="keys" item="k" index="index" open="(" separator="," close=")">
            '${params[k]}'
        </foreach>
    </insert>
    
    <update id="updateExcelData" parameterType="map" statementType="STATEMENT">
        update ${tablename} 
        <set>
            <foreach collection="keys" item="k" separator="  , " >
                ${k} =  '${params[k]}'
            </foreach>
        </set>
        where id = '${id}'
    </update>
    
    <select id="search" parameterType="java.util.Map" statementType="STATEMENT" resultType="java.util.Map">
        select  ${fields}  from ${tableName}  
        <if test="conditions != null">
            where ${conditions}
        </if>
    </select> 
    
    <select id="findAllByFileId"  parameterType="java.util.Map"  resultType="java.util.Map">
        select * from ${tableName}   where fileId = #{fileId} and treeId = #{treeId}
    </select>
    
    <delete id="deleteById" parameterType="java.util.Map" statementType="STATEMENT" >
        delete from  ${tableName}  where id = '${id}'
    </delete>
    
    <delete id="deleteByFileId" parameterType="java.util.Map" statementType="STATEMENT" >
        delete from  ${tableName}  where fileId = '${fileId}'
    </delete>
    
</mapper> 